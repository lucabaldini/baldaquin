# coding=UTF-8
# (The former is necessary as the arduino folks use non-ASCII characters in
# their boards.txt files.)

# Created by boards2py.convert() on Tue Nov 22 14:19:33 2016.
#
# Do not edit by hand!


BOARD_DICT = {}

BOARD_DICT['yun'] = {'model': 'yun', 'arch': 'avr', 'name': 'Arduino YÃºn', 'upload.via_ssh': 'true', 'vid.0': '0x2341', 'pid.0': '0x0041', 'vid.1': '0x2341', 'pid.1': '0x8041', 'vid.2': '0x2A03', 'pid.2': '0x0041', 'vid.3': '0x2A03', 'pid.3': '0x8041', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xfb', 'bootloader.file': 'caterina/Caterina-Yun.hex', 'bootloader.noblink': 'caterina/Caterina-Yun-noblink.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x8041', 'build.usb_product': '"Arduino Yun"', 'build.board': 'AVR_YUN', 'build.core': 'arduino', 'build.variant': 'yun', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['uno'] = {'model': 'uno', 'arch': 'avr', 'name': 'Arduino/Genuino Uno', 'vid.0': '0x2341', 'pid.0': '0x0043', 'vid.1': '0x2341', 'pid.1': '0x0001', 'vid.2': '0x2A03', 'pid.2': '0x0043', 'vid.3': '0x2341', 'pid.3': '0x0243', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.maximum_size': '32256', 'upload.maximum_data_size': '2048', 'upload.speed': '115200', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDE', 'bootloader.extended_fuses': '0x05', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'bootloader.file': 'optiboot/optiboot_atmega328.hex', 'build.mcu': 'atmega328p', 'build.f_cpu': '16000000L', 'build.board': 'AVR_UNO', 'build.core': 'arduino', 'build.variant': 'standard'}

BOARD_DICT['diecimila328'] = {'model': 'diecimila328', 'arch': 'avr', 'name': 'Arduino Duemilanove or Diecimila', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_DUEMILANOVE', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega328', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328.hex', 'build.mcu': 'atmega328p'}

BOARD_DICT['diecimila168'] = {'model': 'diecimila168', 'arch': 'avr', 'name': 'Arduino Duemilanove or Diecimila', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_DUEMILANOVE', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_diecimila.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['nano328'] = {'model': 'nano328', 'arch': 'avr', 'name': 'Arduino Nano', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_NANO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega328', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328.hex', 'build.mcu': 'atmega328p'}

BOARD_DICT['nano168'] = {'model': 'nano168', 'arch': 'avr', 'name': 'Arduino Nano', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_NANO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_diecimila.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['mega2560'] = {'model': 'mega2560', 'arch': 'avr', 'name': 'Arduino/Genuino Mega or Mega 2560', 'vid.0': '0x2341', 'pid.0': '0x0010', 'vid.1': '0x2341', 'pid.1': '0x0042', 'vid.2': '0x2A03', 'pid.2': '0x0010', 'vid.3': '0x2A03', 'pid.3': '0x0042', 'vid.4': '0x2341', 'pid.4': '0x0210', 'vid.5': '0x2341', 'pid.5': '0x0242', 'upload.tool': 'avrdude', 'upload.maximum_data_size': '8192', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.core': 'arduino', 'build.variant': 'mega', 'build.board': 'AVR_MEGA2560', 'nickname': 'ATmega2560 (Mega 2560)', 'upload.protocol': 'wiring', 'upload.maximum_size': '253952', 'upload.speed': '115200', 'bootloader.high_fuses': '0xD8', 'bootloader.extended_fuses': '0xFD', 'bootloader.file': 'stk500v2/stk500boot_v2_mega2560.hex', 'build.mcu': 'atmega2560', 'build.board': 'AVR_MEGA2560'}

BOARD_DICT['mega1280'] = {'model': 'mega1280', 'arch': 'avr', 'name': 'Arduino/Genuino Mega or Mega 2560', 'vid.0': '0x2341', 'pid.0': '0x0010', 'vid.1': '0x2341', 'pid.1': '0x0042', 'vid.2': '0x2A03', 'pid.2': '0x0010', 'vid.3': '0x2A03', 'pid.3': '0x0042', 'vid.4': '0x2341', 'pid.4': '0x0210', 'vid.5': '0x2341', 'pid.5': '0x0242', 'upload.tool': 'avrdude', 'upload.maximum_data_size': '8192', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.core': 'arduino', 'build.variant': 'mega', 'build.board': 'AVR_MEGA', 'nickname': 'ATmega1280', 'upload.protocol': 'arduino', 'upload.maximum_size': '126976', 'upload.speed': '57600', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0xF5', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega1280.hex', 'build.mcu': 'atmega1280', 'build.board': 'AVR_MEGA'}

BOARD_DICT['megaADK'] = {'model': 'megaADK', 'arch': 'avr', 'name': 'Arduino Mega ADK', 'vid.0': '0x2341', 'pid.0': '0x003f', 'vid.1': '0x2341', 'pid.1': '0x0044', 'vid.2': '0x2A03', 'pid.2': '0x003f', 'vid.3': '0x2A03', 'pid.3': '0x0044', 'upload.tool': 'avrdude', 'upload.protocol': 'wiring', 'upload.maximum_size': '253952', 'upload.maximum_data_size': '8192', 'upload.speed': '115200', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xD8', 'bootloader.extended_fuses': '0xFD', 'bootloader.file': 'stk500v2/stk500boot_v2_mega2560.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.mcu': 'atmega2560', 'build.f_cpu': '16000000L', 'build.board': 'AVR_ADK', 'build.core': 'arduino', 'build.variant': 'mega'}

BOARD_DICT['leonardo'] = {'model': 'leonardo', 'arch': 'avr', 'name': 'Arduino Leonardo', 'vid.0': '0x2341', 'pid.0': '0x0036', 'vid.1': '0x2341', 'pid.1': '0x8036', 'vid.2': '0x2A03', 'pid.2': '0x0036', 'vid.3': '0x2A03', 'pid.3': '0x8036', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xcb', 'bootloader.file': 'caterina/Caterina-Leonardo.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x8036', 'build.usb_product': '"Arduino Leonardo"', 'build.board': 'AVR_LEONARDO', 'build.core': 'arduino', 'build.variant': 'leonardo', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['micro'] = {'model': 'micro', 'arch': 'avr', 'name': 'Arduino/Genuino Micro', 'vid.0': '0x2341', 'pid.0': '0x0037', 'vid.1': '0x2341', 'pid.1': '0x8037', 'vid.2': '0x2A03', 'pid.2': '0x0037', 'vid.3': '0x2A03', 'pid.3': '0x8037', 'vid.4': '0x2341', 'pid.4': '0x0237', 'vid.4.build.vid': '0x2341', 'vid.4.build.pid': '0x8237', 'vid.4.build.usb_product': '"Genuino Micro"', 'vid.4.bootloader.file': 'caterina/Caterina-Genuino-Micro.hex', 'vid.5': '0x2341', 'pid.5': '0x8237', 'vid.5.build.vid': '0x2341', 'vid.5.build.pid': '0x8237', 'vid.5.build.usb_product': '"Genuino Micro"', 'vid.5.bootloader.file': 'caterina/Caterina-Genuino-Micro.hex', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xcb', 'bootloader.file': 'caterina/Caterina-Micro.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x8037', 'build.usb_product': '"Arduino Micro"', 'build.board': 'AVR_MICRO', 'build.core': 'arduino', 'build.variant': 'micro', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['esplora'] = {'model': 'esplora', 'arch': 'avr', 'name': 'Arduino Esplora', 'vid.0': '0x2341', 'pid.0': '0x003C', 'vid.1': '0x2341', 'pid.1': '0x803C', 'vid.2': '0x2A03', 'pid.2': '0x003C', 'vid.3': '0x2A03', 'pid.3': '0x803C', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xcb', 'bootloader.file': 'caterina/Caterina-Esplora.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x803c', 'build.usb_product': '"Arduino Esplora"', 'build.board': 'AVR_ESPLORA', 'build.core': 'arduino', 'build.variant': 'leonardo', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['mini328'] = {'model': 'mini328', 'arch': 'avr', 'name': 'Arduino Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_MINI', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega328', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2048', 'upload.speed': '115200', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'optiboot/optiboot_atmega328-Mini.hex', 'build.mcu': 'atmega328p'}

BOARD_DICT['mini168'] = {'model': 'mini168', 'arch': 'avr', 'name': 'Arduino Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_MINI', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_ng.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['ethernet'] = {'model': 'ethernet', 'arch': 'avr', 'name': 'Arduino Ethernet', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.maximum_size': '32256', 'upload.maximum_data_size': '2048', 'upload.speed': '115200', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xde', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'optiboot/optiboot_atmega328.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.variant': 'ethernet', 'build.mcu': 'atmega328p', 'build.f_cpu': '16000000L', 'build.board': 'AVR_ETHERNET', 'build.core': 'arduino'}

BOARD_DICT['fio'] = {'model': 'fio', 'arch': 'avr', 'name': 'Arduino Fio', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.mcu': 'atmega328p', 'build.f_cpu': '8000000L', 'build.board': 'AVR_FIO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs'}

BOARD_DICT['bt328'] = {'model': 'bt328', 'arch': 'avr', 'name': 'Arduino BT', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.speed': '19200', 'upload.disable_flushing': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_BT', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega328', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2048', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'bt/ATmegaBOOT_168_atmega328_bt.hex', 'build.mcu': 'atmega328p'}

BOARD_DICT['bt168'] = {'model': 'bt168', 'arch': 'avr', 'name': 'Arduino BT', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.speed': '19200', 'upload.disable_flushing': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '16000000L', 'build.board': 'AVR_BT', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'bt/ATmegaBOOT_168.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['LilyPadUSB'] = {'model': 'LilyPadUSB', 'arch': 'avr', 'name': 'LilyPad Arduino USB', 'vid.0': '0x1B4F', 'pid.0': '0x9207', 'vid.1': '0x1B4F', 'pid.1': '0x9208', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xce', 'bootloader.file': 'caterina-LilyPadUSB/Caterina-LilyPadUSB.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '8000000L', 'build.vid': '0x1B4F', 'build.pid': '0x9208', 'build.usb_product': '"LilyPad USB"', 'build.board': 'AVR_LILYPAD_USB', 'build.core': 'arduino', 'build.variant': 'leonardo', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['lilypad328'] = {'model': 'lilypad328', 'arch': 'avr', 'name': 'LilyPad Arduino', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '8000000L', 'build.board': 'AVR_LILYPAD', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega328', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex', 'build.mcu': 'atmega328p'}

BOARD_DICT['lilypad168'] = {'model': 'lilypad168', 'arch': 'avr', 'name': 'LilyPad Arduino', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.f_cpu': '8000000L', 'build.board': 'AVR_LILYPAD', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.low_fuses': '0xe2', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'lilypad/LilyPadBOOT_168.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['pro16'] = {'model': 'pro16', 'arch': 'avr', 'name': 'Arduino Pro or Pro Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.board': 'AVR_PRO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega328 (5V, 16 MHz)', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328.hex', 'build.mcu': 'atmega328p', 'build.f_cpu': '16000000L'}

BOARD_DICT['pro8'] = {'model': 'pro8', 'arch': 'avr', 'name': 'Arduino Pro or Pro Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.board': 'AVR_PRO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega328 (3.3V, 8 MHz)', 'upload.maximum_size': '30720', 'upload.maximum_data_size': '2048', 'upload.speed': '57600', 'bootloader.low_fuses': '0xFF', 'bootloader.high_fuses': '0xDA', 'bootloader.extended_fuses': '0x05', 'bootloader.file': 'atmega/ATmegaBOOT_168_atmega328_pro_8MHz.hex', 'build.mcu': 'atmega328p', 'build.f_cpu': '8000000L'}

BOARD_DICT['pro16'] = {'model': 'pro16', 'arch': 'avr', 'name': 'Arduino Pro or Pro Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.board': 'AVR_PRO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega168 (5V, 16 MHz)', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_diecimila.hex', 'build.mcu': 'atmega168', 'build.f_cpu': '16000000L'}

BOARD_DICT['pro8'] = {'model': 'pro8', 'arch': 'avr', 'name': 'Arduino Pro or Pro Mini', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.board': 'AVR_PRO', 'build.core': 'arduino', 'build.variant': 'eightanaloginputs', 'nickname': 'ATmega168 (3.3V, 8 MHz)', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'upload.speed': '19200', 'bootloader.low_fuses': '0xc6', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_pro_8MHz.hex', 'build.mcu': 'atmega168', 'build.f_cpu': '8000000L'}

BOARD_DICT['atmegang168'] = {'model': 'atmegang168', 'arch': 'avr', 'name': 'Arduino NG or older', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.speed': '19200', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.mcu': 'atmega168', 'build.f_cpu': '16000000L', 'build.board': 'AVR_NG', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega168', 'upload.maximum_size': '14336', 'upload.maximum_data_size': '1024', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xdd', 'bootloader.extended_fuses': '0x00', 'bootloader.file': 'atmega/ATmegaBOOT_168_ng.hex', 'build.mcu': 'atmega168'}

BOARD_DICT['atmegang8'] = {'model': 'atmegang8', 'arch': 'avr', 'name': 'Arduino NG or older', 'upload.tool': 'avrdude', 'upload.protocol': 'arduino', 'upload.speed': '19200', 'bootloader.tool': 'avrdude', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x0F', 'build.mcu': 'atmega8', 'build.f_cpu': '16000000L', 'build.board': 'AVR_NG', 'build.core': 'arduino', 'build.variant': 'standard', 'nickname': 'ATmega8', 'upload.maximum_size': '7168', 'upload.maximum_data_size': '1024', 'bootloader.low_fuses': '0xdf', 'bootloader.high_fuses': '0xca', 'bootloader.file': 'atmega8/ATmegaBOOT-prod-firmware-2009-11-07.hex', 'build.mcu': 'atmega8'}

BOARD_DICT['robotControl'] = {'model': 'robotControl', 'arch': 'avr', 'name': 'Arduino Robot Control', 'vid.0': '0x2341', 'pid.0': '0x0038', 'vid.1': '0x2341', 'pid.1': '0x8038', 'vid.2': '0x2A03', 'pid.2': '0x0038', 'vid.3': '0x2A03', 'pid.3': '0x8038', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xcb', 'bootloader.file': 'caterina-Arduino_Robot/Caterina-Robot-Control.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x8038', 'build.usb_product': '"Robot Control"', 'build.board': 'AVR_ROBOT_CONTROL', 'build.core': 'arduino', 'build.variant': 'robot_control', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['robotMotor'] = {'model': 'robotMotor', 'arch': 'avr', 'name': 'Arduino Robot Motor', 'vid.0': '0x2341', 'pid.0': '0x0039', 'vid.1': '0x2341', 'pid.1': '0x8039', 'vid.2': '0x2A03', 'pid.2': '0x0039', 'vid.3': '0x2A03', 'pid.3': '0x8039', 'upload.tool': 'avrdude', 'upload.protocol': 'avr109', 'upload.maximum_size': '28672', 'upload.maximum_data_size': '2560', 'upload.speed': '57600', 'upload.disable_flushing': 'true', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'bootloader.tool': 'avrdude', 'bootloader.low_fuses': '0xff', 'bootloader.high_fuses': '0xd8', 'bootloader.extended_fuses': '0xcb', 'bootloader.file': 'caterina-Arduino_Robot/Caterina-Robot-Motor.hex', 'bootloader.unlock_bits': '0x3F', 'bootloader.lock_bits': '0x2F', 'build.mcu': 'atmega32u4', 'build.f_cpu': '16000000L', 'build.vid': '0x2341', 'build.pid': '0x8039', 'build.usb_product': '"Robot Motor"', 'build.board': 'AVR_ROBOT_MOTOR', 'build.core': 'arduino', 'build.variant': 'robot_motor', 'build.extra_flags': '{build.usb_flags}'}

BOARD_DICT['gemma'] = {'model': 'gemma', 'arch': 'avr', 'vid.0': '0x2341', 'pid.0': '0x0c9f', 'name': 'Arduino Gemma', 'bootloader.low_fuses': '0xF1', 'bootloader.high_fuses': '0xD5', 'bootloader.extended_fuses': '0xFE', 'bootloader.tool': 'avrdude', 'bootloader.lock_bits': '', 'bootloader.unlock_bits': '', 'bootloader.file': 'gemma/gemma_v1.hex', 'build.mcu': 'attiny85', 'build.f_cpu': '8000000L', 'build.core': 'arduino', 'build.variant': 'gemma', 'build.board': 'AVR_GEMMA', 'upload.tool': 'avrdude', 'upload.maximum_size': '5310'}

BOARD_DICT['gemma'] = {'model': 'gemma', 'arch': 'avr', 'vid.0': '0x2341', 'pid.0': '0x0c9f', 'name': 'Arduino Gemma', 'bootloader.low_fuses': '0xF1', 'bootloader.high_fuses': '0xD5', 'bootloader.extended_fuses': '0xFE', 'bootloader.tool': 'avrdude', 'bootloader.lock_bits': '', 'bootloader.unlock_bits': '', 'bootloader.file': 'gemma/gemma_v1.hex', 'build.mcu': 'attiny85', 'build.f_cpu': '8000000L', 'build.core': 'arduino', 'build.variant': 'gemma', 'build.board': 'AVR_GEMMA', 'upload.tool': 'avrdude', 'upload.maximum_size': '5310'}

BOARD_DICT['arduino_due_x_dbg'] = {'model': 'arduino_due_x_dbg', 'arch': 'sam', 'name': 'Arduino Due (Programming Port)', 'vid.0': '0x2341', 'pid.0': '0x003d', 'vid.1': '0x2A03', 'pid.1': '0x003d', 'upload.tool': 'bossac', 'upload.protocol': 'sam-ba', 'upload.maximum_size': '524288', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'false', 'upload.native_usb': 'false', 'build.mcu': 'cortex-m3', 'build.f_cpu': '84000000L', 'build.usb_manufacturer': '"Arduino LLC"', 'build.usb_product': '"Arduino Due"', 'build.board': 'SAM_DUE', 'build.core': 'arduino', 'build.extra_flags': '-D__SAM3X8E__ -mthumb {build.usb_flags}', 'build.ldscript': 'linker_scripts/gcc/flash.ld', 'build.variant': 'arduino_due_x', 'build.variant_system_lib': 'libsam_sam3x8e_gcc_rel.a', 'build.vid': '0x2341', 'build.pid': '0x003e'}

BOARD_DICT['arduino_due_x'] = {'model': 'arduino_due_x', 'arch': 'sam', 'name': 'Arduino Due (Native USB Port)', 'vid.0': '0x2341', 'pid.0': '0x003e', 'vid.1': '0x2A03', 'pid.1': '0x003e', 'upload.tool': 'bossac', 'upload.protocol': 'sam-ba', 'upload.maximum_size': '524288', 'upload.use_1200bps_touch': 'true', 'upload.wait_for_upload_port': 'true', 'upload.native_usb': 'true', 'build.mcu': 'cortex-m3', 'build.f_cpu': '84000000L', 'build.usb_manufacturer': '"Arduino LLC"', 'build.usb_product': '"Arduino Due"', 'build.board': 'SAM_DUE', 'build.core': 'arduino', 'build.extra_flags': '-D__SAM3X8E__ -mthumb {build.usb_flags}', 'build.ldscript': 'linker_scripts/gcc/flash.ld', 'build.variant': 'arduino_due_x', 'build.variant_system_lib': 'libsam_sam3x8e_gcc_rel.a', 'build.vid': '0x2341', 'build.pid': '0x003e'}

SERIAL_ID_DICT = {('0x2A03', '0x0010'): 'mega2560', ('0x2341', '0x0037'): 'micro', ('0x2A03', '0x8036'): 'leonardo', ('0x2341', '0x003C'): 'esplora', ('0x2341', '0x8036'): 'leonardo', ('0x2A03', '0x8041'): 'yun', ('0x2A03', '0x003C'): 'esplora', ('0x2341', '0x8041'): 'yun', ('0x2A03', '0x0042'): 'mega2560', ('0x2341', '0x003f'): 'megaADK', ('0x1B4F', '0x9207'): 'LilyPadUSB', ('0x2A03', '0x003d'): 'arduino_due_x_dbg', ('0x2341', '0x0036'): 'leonardo', ('0x2A03', '0x8039'): 'robotMotor', ('0x2341', '0x003d'): 'arduino_due_x_dbg', ('0x2A03', '0x803C'): 'esplora', ('0x2341', '0x0039'): 'robotMotor', ('0x2341', '0x0041'): 'yun', ('0x2A03', '0x0043'): 'uno', ('0x1B4F', '0x9208'): 'LilyPadUSB', ('0x2A03', '0x0039'): 'robotMotor', ('0x2341', '0x8039'): 'robotMotor', ('0x2A03', '0x8038'): 'robotControl', ('0x2341', '0x0038'): 'robotControl', ('0x2341', '0x0042'): 'mega2560', ('0x2341', '0x0c9f'): 'gemma', ('0x2341', '0x0010'): 'mega2560', ('0x2A03', '0x0037'): 'micro', ('0x2341', '0x003e'): 'arduino_due_x', ('0x2341', '0x0001'): 'uno', ('0x2A03', '0x0038'): 'robotControl', ('0x2341', '0x8038'): 'robotControl', ('0x2341', '0x0243'): 'uno', ('0x2341', '0x0043'): 'uno', ('0x2A03', '0x0044'): 'megaADK', ('0x2A03', '0x8037'): 'micro', ('0x2A03', '0x003e'): 'arduino_due_x', ('0x2341', '0x8037'): 'micro', ('0x2A03', '0x0036'): 'leonardo', ('0x2341', '0x803C'): 'esplora', ('0x2A03', '0x0041'): 'yun', ('0x2A03', '0x003f'): 'megaADK', ('0x2341', '0x0044'): 'megaADK'}


# Beginning of hacks.

# A hack for the diecimila. Not sure why the new boards.txt file
# does not contain the vid, pid pair.
SERIAL_ID_DICT[('0x0403', '0x6001')] = 'atmega328diecimila168'

# End of hacks :-)

BOARD_LIST = list(BOARD_DICT.keys())
BOARD_LIST.sort()


def board_by_model(model: str) -> str:
    """Return the board name corresponding to a given model.
    """
    return BOARD_DICT.get(model, None)


def board_by_serial_id(vid: str, pid: str) -> str:
    """Return the board name corresponding to a given (vid, pid)
    """
    return SERIAL_ID_DICT.get((vid, pid))



if __name__ == '__main__':
    print(SERIAL_ID_DICT)
    print(board_by_model('uno'))
    print(board_by_model('tre'))
    print(board_by_serial_id('0x2341', '0x0042'))
    print(board_by_serial_id(None, None))
